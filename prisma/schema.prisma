// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}


model Region {
  id            Int     @id @default(autoincrement())
  nombre        String  @db.VarChar(255)
  frase         String  @db.VarChar(255)
  descripcion   String  @db.Text
  desc_corta    String  @db.Text
  img           String  @db.VarChar(255)
  provisiones   String? @db.Text
  curios        Curio[]
  jefes         RegionOnJefe[]
  items         ItemsOnRegion[]
}

model Item {
  id            Int     @id @default(autoincrement())
  nombre        String  @db.VarChar(255)
  descripcion   String? @db.VarChar(255)
  img           String  @db.VarChar(255)
  curios        ItemsOnCurio[]
  regiones      ItemsOnRegion[]
}

model ItemsOnRegion{
  id            Int     @id @default(autoincrement())
  itemId        Int
  item          Item    @relation(fields: [itemId], references: [id])
  regionId      Int
  region        Region  @relation(fields: [regionId], references: [id])
  cantidad      Int
  tipo          Int     //1: corta, 2: mediana, 3: larga
}

model Curio{
  id              Int       @id @default(autoincrement())
  nombre          String    @db.VarChar(255)
  ll_nombre       String?   @db.VarChar(255)
  img             String    @db.VarChar(255)
  region          Region?   @relation(fields: [regionId], references: [id])
  regionId        Int?
  itemsOnCurio    ItemsOnCurio[]
  nombre_archivo  String?  @db.VarChar(255)
}

model ItemsOnCurio{
  id            Int     @id @default(autoincrement())
  curioId       Int
  curio         Curio   @relation(fields: [curioId], references: [id])
  itemId        Int?
  item          Item?    @relation(fields: [itemId], references: [id])
  efecto        String  @db.VarChar(255)
}

model Clase {
  id            Int     @id @default(autoincrement())
  nombre        String  @db.VarChar(255)
  descripcion   String? @db.VarChar(255)
  img_retrato   String  @db.VarChar(255)
  img           String  @db.VarChar(255)
  formaciones   Formacion[]
  jefes         ClaseOnJefe[]
}

model Formacion{
  id            Int     @id @default(autoincrement())
  descripcion   String? @db.VarChar(255)
  clases        Clase[]
}

model Jefe{
  id                Int     @id @default(autoincrement())
  nombre            String  @db.VarChar(255)
  img               String  @db.VarChar(255)
  img_stats         String  @db.VarChar(255)
  comportamiento    String  @db.Text
  estrategia        String  @db.Text
  memorias_1        String? @db.Text
  memorias_2        String? @db.Text
  memorias_3        String? @db.Text
  skills            Skill[]
  region            RegionOnJefe[]
  clases            ClaseOnJefe[]
}

model ClaseOnJefe{
  id            Int     @id @default(autoincrement())
  jefeId        Int
  jefe          Jefe    @relation(fields: [jefeId], references: [id])
  claseId       Int
  clase         Clase   @relation(fields: [claseId], references: [id])
  descripcion   String  @db.Text
}

model RegionOnJefe{
  id            Int     @id @default(autoincrement())
  jefeId        Int
  jefe          Jefe    @relation(fields: [jefeId], references: [id])
  regionId      Int
  region        Region  @relation(fields: [regionId], references: [id])
}

model Skill{
  id            Int     @id @default(autoincrement())
  level         Int     @default(1) //1: Apprentice , 2: Veteran , 3: Champion
  name          String  @db.VarChar(255)
  range         String  @db.VarChar(255)
  rank          String  @db.VarChar(255)
  target        String  @db.VarChar(255)
  acc           String  @db.VarChar(255)
  crit          String  @db.VarChar(255)
  dmg           String  @db.VarChar(255)
  target_effect String  @db.VarChar(255)
  self_effect   String  @db.VarChar(255)
  notes         String  @db.VarChar(255)
  jefe          Jefe    @relation(fields: [jefeId], references: [id])
  jefeId        Int
}